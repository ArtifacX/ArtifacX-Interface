{
  "contractName": "CertificationRegistry",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_company",
          "type": "address"
        }
      ],
      "name": "isWhitelisted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_company",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_status",
          "type": "bool"
        }
      ],
      "name": "setWhitelisted",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_company\",\"type\":\"address\"}],\"name\":\"isWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_company\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_status\",\"type\":\"bool\"}],\"name\":\"setWhitelisted\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/Aayush Malde/Desktop/aayush documents/ArtifacX/ArtifacX-SmartContracts/contracts/CertificationRegistry.sol\":\"CertificationRegistry\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/Aayush Malde/Desktop/aayush documents/ArtifacX/ArtifacX-SmartContracts/contracts/CertificationRegistry.sol\":{\"keccak256\":\"0xf51d24e028eff3bb5ed61ea226b727fb6e145db29e067dfd033aebd26b373c42\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://93c7b64460c1df703e5c61989f892909477f430305ea90e4867c6d76ae321448\",\"dweb:/ipfs/QmYATmg6HS7mnuzAgM1uLnjVzA7cefhPwUYUKiTU4NWN4i\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xd2bd30ee25ef65894d0a4f974eb71cc59907d62ab26fe1d2e96e5b4572178d8f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a250ef83b73a9a8e4f89afdfc140f0dcf4443a1753b3d1456445dc9662a1198\",\"dweb:/ipfs/QmavLfbnmjjSSWWjd6ouNok7mcj7XtCnX7DkLaDZP8qykj\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6107228061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80633af32abf1461005c578063715018a61461008c5780638da5cb5b146100965780639281aa0b146100b4578063f2fde38b146100d0575b600080fd5b610076600480360381019061007191906104b8565b6100ec565b604051610083919061059c565b60405180910390f35b610094610142565b005b61009e6101ca565b6040516100ab9190610581565b60405180910390f35b6100ce60048036038101906100c991906104e1565b6101f3565b005b6100ea60048036038101906100e591906104b8565b6102ca565b005b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b61014a6103c2565b73ffffffffffffffffffffffffffffffffffffffff166101686101ca565b73ffffffffffffffffffffffffffffffffffffffff16146101be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b5906105d7565b60405180910390fd5b6101c860006103ca565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6101fb6103c2565b73ffffffffffffffffffffffffffffffffffffffff166102196101ca565b73ffffffffffffffffffffffffffffffffffffffff161461026f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610266906105d7565b60405180910390fd5b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6102d26103c2565b73ffffffffffffffffffffffffffffffffffffffff166102f06101ca565b73ffffffffffffffffffffffffffffffffffffffff1614610346576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033d906105d7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156103b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ad906105b7565b60405180910390fd5b6103bf816103ca565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008135905061049d816106be565b92915050565b6000813590506104b2816106d5565b92915050565b6000602082840312156104ca57600080fd5b60006104d88482850161048e565b91505092915050565b600080604083850312156104f457600080fd5b60006105028582860161048e565b9250506020610513858286016104a3565b9150509250929050565b61052681610608565b82525050565b6105358161061a565b82525050565b60006105486026836105f7565b915061055382610646565b604082019050919050565b600061056b6020836105f7565b915061057682610695565b602082019050919050565b6000602082019050610596600083018461051d565b92915050565b60006020820190506105b1600083018461052c565b92915050565b600060208201905081810360008301526105d08161053b565b9050919050565b600060208201905081810360008301526105f08161055e565b9050919050565b600082825260208201905092915050565b600061061382610626565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6106c781610608565b81146106d257600080fd5b50565b6106de8161061a565b81146106e957600080fd5b5056fea2646970667358221220f4821a2f971fdea29306a6723f52455664811ccf63f90838feaeaddfafcbd77264736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c80633af32abf1461005c578063715018a61461008c5780638da5cb5b146100965780639281aa0b146100b4578063f2fde38b146100d0575b600080fd5b610076600480360381019061007191906104b8565b6100ec565b604051610083919061059c565b60405180910390f35b610094610142565b005b61009e6101ca565b6040516100ab9190610581565b60405180910390f35b6100ce60048036038101906100c991906104e1565b6101f3565b005b6100ea60048036038101906100e591906104b8565b6102ca565b005b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b61014a6103c2565b73ffffffffffffffffffffffffffffffffffffffff166101686101ca565b73ffffffffffffffffffffffffffffffffffffffff16146101be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b5906105d7565b60405180910390fd5b6101c860006103ca565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6101fb6103c2565b73ffffffffffffffffffffffffffffffffffffffff166102196101ca565b73ffffffffffffffffffffffffffffffffffffffff161461026f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610266906105d7565b60405180910390fd5b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6102d26103c2565b73ffffffffffffffffffffffffffffffffffffffff166102f06101ca565b73ffffffffffffffffffffffffffffffffffffffff1614610346576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033d906105d7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156103b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ad906105b7565b60405180910390fd5b6103bf816103ca565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008135905061049d816106be565b92915050565b6000813590506104b2816106d5565b92915050565b6000602082840312156104ca57600080fd5b60006104d88482850161048e565b91505092915050565b600080604083850312156104f457600080fd5b60006105028582860161048e565b9250506020610513858286016104a3565b9150509250929050565b61052681610608565b82525050565b6105358161061a565b82525050565b60006105486026836105f7565b915061055382610646565b604082019050919050565b600061056b6020836105f7565b915061057682610695565b602082019050919050565b6000602082019050610596600083018461051d565b92915050565b60006020820190506105b1600083018461052c565b92915050565b600060208201905081810360008301526105d08161053b565b9050919050565b600060208201905081810360008301526105f08161055e565b9050919050565b600082825260208201905092915050565b600061061382610626565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6106c781610608565b81146106d257600080fd5b50565b6106de8161061a565b81146106e957600080fd5b5056fea2646970667358221220f4821a2f971fdea29306a6723f52455664811ccf63f90838feaeaddfafcbd77264736f6c63430008040033",
  "immutableReferences": {},
  "sourceMap": "117:351:2:-:0;;;;;;;;;;;;;949:32:7;968:12;:10;;;:12;;:::i;:::-;949:18;;;:32;;:::i;:::-;117:351:2;;656:98:13;709:7;736:10;729:17;;656:98;:::o;2340:191:7:-;2414:16;2433:6;;;;;;;;;;;2414:25;;2459:8;2450:6;;:17;;;;;;;;;;;;;;;;;;2514:8;2483:40;;2504:8;2483:40;;;;;;;;;;;;2340:191;;:::o;117:351:2:-;;;;;;;",
  "deployedSourceMap": "117:351:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;220:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1721:103:7;;;:::i;:::-;;1070:87;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;341:122:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1979:201:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;220:113:2;281:4;304:11;:21;316:8;304:21;;;;;;;;;;;;;;;;;;;;;;;;;297:28;;220:113;;;:::o;1721:103:7:-;1301:12;:10;:12::i;:::-;1290:23;;:7;:5;:7::i;:::-;:23;;;1282:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1786:30:::1;1813:1;1786:18;:30::i;:::-;1721:103::o:0;1070:87::-;1116:7;1143:6;;;;;;;;;;;1136:13;;1070:87;:::o;341:122:2:-;1301:12:7;:10;:12::i;:::-;1290:23;;:7;:5;:7::i;:::-;:23;;;1282:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;448:7:2::1;424:11;:21;436:8;424:21;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;341:122:::0;;:::o;1979:201:7:-;1301:12;:10;:12::i;:::-;1290:23;;:7;:5;:7::i;:::-;:23;;;1282:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2088:1:::1;2068:22;;:8;:22;;;;2060:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2144:28;2163:8;2144:18;:28::i;:::-;1979:201:::0;:::o;656:98:13:-;709:7;736:10;729:17;;656:98;:::o;2340:191:7:-;2414:16;2433:6;;;;;;;;;;;2414:25;;2459:8;2450:6;;:17;;;;;;;;;;;;;;;;;;2514:8;2483:40;;2504:8;2483:40;;;;;;;;;;;;2340:191;;:::o;7:139:16:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:133::-;195:5;233:6;220:20;211:29;;249:30;273:5;249:30;:::i;:::-;201:84;;;;:::o;291:262::-;350:6;399:2;387:9;378:7;374:23;370:32;367:2;;;415:1;412;405:12;367:2;458:1;483:53;528:7;519:6;508:9;504:22;483:53;:::i;:::-;473:63;;429:117;357:196;;;;:::o;559:401::-;624:6;632;681:2;669:9;660:7;656:23;652:32;649:2;;;697:1;694;687:12;649:2;740:1;765:53;810:7;801:6;790:9;786:22;765:53;:::i;:::-;755:63;;711:117;867:2;893:50;935:7;926:6;915:9;911:22;893:50;:::i;:::-;883:60;;838:115;639:321;;;;;:::o;966:118::-;1053:24;1071:5;1053:24;:::i;:::-;1048:3;1041:37;1031:53;;:::o;1090:109::-;1171:21;1186:5;1171:21;:::i;:::-;1166:3;1159:34;1149:50;;:::o;1205:366::-;1347:3;1368:67;1432:2;1427:3;1368:67;:::i;:::-;1361:74;;1444:93;1533:3;1444:93;:::i;:::-;1562:2;1557:3;1553:12;1546:19;;1351:220;;;:::o;1577:366::-;1719:3;1740:67;1804:2;1799:3;1740:67;:::i;:::-;1733:74;;1816:93;1905:3;1816:93;:::i;:::-;1934:2;1929:3;1925:12;1918:19;;1723:220;;;:::o;1949:222::-;2042:4;2080:2;2069:9;2065:18;2057:26;;2093:71;2161:1;2150:9;2146:17;2137:6;2093:71;:::i;:::-;2047:124;;;;:::o;2177:210::-;2264:4;2302:2;2291:9;2287:18;2279:26;;2315:65;2377:1;2366:9;2362:17;2353:6;2315:65;:::i;:::-;2269:118;;;;:::o;2393:419::-;2559:4;2597:2;2586:9;2582:18;2574:26;;2646:9;2640:4;2636:20;2632:1;2621:9;2617:17;2610:47;2674:131;2800:4;2674:131;:::i;:::-;2666:139;;2564:248;;;:::o;2818:419::-;2984:4;3022:2;3011:9;3007:18;2999:26;;3071:9;3065:4;3061:20;3057:1;3046:9;3042:17;3035:47;3099:131;3225:4;3099:131;:::i;:::-;3091:139;;2989:248;;;:::o;3243:169::-;3327:11;3361:6;3356:3;3349:19;3401:4;3396:3;3392:14;3377:29;;3339:73;;;;:::o;3418:96::-;3455:7;3484:24;3502:5;3484:24;:::i;:::-;3473:35;;3463:51;;;:::o;3520:90::-;3554:7;3597:5;3590:13;3583:21;3572:32;;3562:48;;;:::o;3616:126::-;3653:7;3693:42;3686:5;3682:54;3671:65;;3661:81;;;:::o;3748:225::-;3888:34;3884:1;3876:6;3872:14;3865:58;3957:8;3952:2;3944:6;3940:15;3933:33;3854:119;:::o;3979:182::-;4119:34;4115:1;4107:6;4103:14;4096:58;4085:76;:::o;4167:122::-;4240:24;4258:5;4240:24;:::i;:::-;4233:5;4230:35;4220:2;;4279:1;4276;4269:12;4220:2;4210:79;:::o;4295:116::-;4365:21;4380:5;4365:21;:::i;:::-;4358:5;4355:32;4345:2;;4401:1;4398;4391:12;4345:2;4335:76;:::o",
  "source": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity 0.8.4;\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract CertificationRegistry is Ownable{\r\n    \r\n    mapping(address => bool) WHITELISTED;\r\n    \r\n    function isWhitelisted(address _company) public view returns(bool){\r\n        return WHITELISTED[_company];\r\n    }\r\n\r\n    function setWhitelisted(address _company, bool _status) public onlyOwner{\r\n        WHITELISTED[_company] = _status;\r\n    }\r\n\r\n}\r\n",
  "sourcePath": "C:/Users/Aayush Malde/Desktop/aayush documents/ArtifacX/ArtifacX-SmartContracts/contracts/CertificationRegistry.sol",
  "ast": {
    "absolutePath": "/C/Users/Aayush Malde/Desktop/aayush documents/ArtifacX/ArtifacX-SmartContracts/contracts/CertificationRegistry.sol",
    "exportedSymbols": {
      "CertificationRegistry": [
        522
      ],
      "Context": [
        2731
      ],
      "Ownable": [
        1140
      ]
    },
    "id": 523,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 486,
        "literals": [
          "solidity",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:22:2"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 487,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 523,
        "sourceUnit": 1141,
        "src": "61:52:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 488,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1140,
              "src": "151:7:2"
            },
            "id": 489,
            "nodeType": "InheritanceSpecifier",
            "src": "151:7:2"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 522,
        "linearizedBaseContracts": [
          522,
          1140,
          2731
        ],
        "name": "CertificationRegistry",
        "nameLocation": "126:21:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 493,
            "mutability": "mutable",
            "name": "WHITELISTED",
            "nameLocation": "196:11:2",
            "nodeType": "VariableDeclaration",
            "scope": 522,
            "src": "171:36:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 492,
              "keyType": {
                "id": 490,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "179:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "171:24:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 491,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "190:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 504,
              "nodeType": "Block",
              "src": "286:47:2",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 500,
                      "name": "WHITELISTED",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 493,
                      "src": "304:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 502,
                    "indexExpression": {
                      "id": 501,
                      "name": "_company",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 495,
                      "src": "316:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "304:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 499,
                  "id": 503,
                  "nodeType": "Return",
                  "src": "297:28:2"
                }
              ]
            },
            "functionSelector": "3af32abf",
            "id": 505,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isWhitelisted",
            "nameLocation": "229:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 496,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 495,
                  "mutability": "mutable",
                  "name": "_company",
                  "nameLocation": "251:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 505,
                  "src": "243:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 494,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "243:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "242:18:2"
            },
            "returnParameters": {
              "id": 499,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 498,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 505,
                  "src": "281:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 497,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "281:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "280:6:2"
            },
            "scope": 522,
            "src": "220:113:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 520,
              "nodeType": "Block",
              "src": "413:50:2",
              "statements": [
                {
                  "expression": {
                    "id": 518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 514,
                        "name": "WHITELISTED",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 493,
                        "src": "424:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 516,
                      "indexExpression": {
                        "id": 515,
                        "name": "_company",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 507,
                        "src": "436:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "424:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 517,
                      "name": "_status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 509,
                      "src": "448:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "424:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 519,
                  "nodeType": "ExpressionStatement",
                  "src": "424:31:2"
                }
              ]
            },
            "functionSelector": "9281aa0b",
            "id": 521,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 512,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 511,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1082,
                  "src": "404:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "404:9:2"
              }
            ],
            "name": "setWhitelisted",
            "nameLocation": "350:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 510,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 507,
                  "mutability": "mutable",
                  "name": "_company",
                  "nameLocation": "373:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 521,
                  "src": "365:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 506,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "365:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 509,
                  "mutability": "mutable",
                  "name": "_status",
                  "nameLocation": "388:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 521,
                  "src": "383:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 508,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "383:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "364:32:2"
            },
            "returnParameters": {
              "id": 513,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "413:0:2"
            },
            "scope": 522,
            "src": "341:122:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 523,
        "src": "117:351:2",
        "usedErrors": []
      }
    ],
    "src": "37:433:2"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/Aayush Malde/Desktop/aayush documents/ArtifacX/ArtifacX-SmartContracts/contracts/CertificationRegistry.sol",
    "exportedSymbols": {
      "CertificationRegistry": [
        522
      ],
      "Context": [
        2731
      ],
      "Ownable": [
        1140
      ]
    },
    "id": 523,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 486,
        "literals": [
          "solidity",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:22:2"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 487,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 523,
        "sourceUnit": 1141,
        "src": "61:52:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 488,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1140,
              "src": "151:7:2"
            },
            "id": 489,
            "nodeType": "InheritanceSpecifier",
            "src": "151:7:2"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 522,
        "linearizedBaseContracts": [
          522,
          1140,
          2731
        ],
        "name": "CertificationRegistry",
        "nameLocation": "126:21:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 493,
            "mutability": "mutable",
            "name": "WHITELISTED",
            "nameLocation": "196:11:2",
            "nodeType": "VariableDeclaration",
            "scope": 522,
            "src": "171:36:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 492,
              "keyType": {
                "id": 490,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "179:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "171:24:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 491,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "190:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 504,
              "nodeType": "Block",
              "src": "286:47:2",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 500,
                      "name": "WHITELISTED",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 493,
                      "src": "304:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 502,
                    "indexExpression": {
                      "id": 501,
                      "name": "_company",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 495,
                      "src": "316:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "304:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 499,
                  "id": 503,
                  "nodeType": "Return",
                  "src": "297:28:2"
                }
              ]
            },
            "functionSelector": "3af32abf",
            "id": 505,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isWhitelisted",
            "nameLocation": "229:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 496,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 495,
                  "mutability": "mutable",
                  "name": "_company",
                  "nameLocation": "251:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 505,
                  "src": "243:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 494,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "243:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "242:18:2"
            },
            "returnParameters": {
              "id": 499,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 498,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 505,
                  "src": "281:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 497,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "281:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "280:6:2"
            },
            "scope": 522,
            "src": "220:113:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 520,
              "nodeType": "Block",
              "src": "413:50:2",
              "statements": [
                {
                  "expression": {
                    "id": 518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 514,
                        "name": "WHITELISTED",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 493,
                        "src": "424:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 516,
                      "indexExpression": {
                        "id": 515,
                        "name": "_company",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 507,
                        "src": "436:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "424:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 517,
                      "name": "_status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 509,
                      "src": "448:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "424:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 519,
                  "nodeType": "ExpressionStatement",
                  "src": "424:31:2"
                }
              ]
            },
            "functionSelector": "9281aa0b",
            "id": 521,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 512,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 511,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1082,
                  "src": "404:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "404:9:2"
              }
            ],
            "name": "setWhitelisted",
            "nameLocation": "350:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 510,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 507,
                  "mutability": "mutable",
                  "name": "_company",
                  "nameLocation": "373:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 521,
                  "src": "365:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 506,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "365:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 509,
                  "mutability": "mutable",
                  "name": "_status",
                  "nameLocation": "388:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 521,
                  "src": "383:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 508,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "383:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "364:32:2"
            },
            "returnParameters": {
              "id": 513,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "413:0:2"
            },
            "scope": 522,
            "src": "341:122:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 523,
        "src": "117:351:2",
        "usedErrors": []
      }
    ],
    "src": "37:433:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x3C0657a0419a5dD9C8026A58dCc63060089604fA",
      "transactionHash": "0x3607cfae1debb1b8727bfa013a40b7645a5ab62868fd0b08a6f792fd3a348329"
    }
  },
  "schemaVersion": "3.2.3",
  "updatedAt": "2022-05-01T13:28:13.036Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}